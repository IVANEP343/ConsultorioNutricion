// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using consultorioNutricion.Data;

#nullable disable

namespace consultorioNutricion.Migrations
{
    [DbContext(typeof(ConsultorioDbContext))]
    [Migration("20250510193829_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("consultorioNutricion.Models.Ciudad", b =>
                {
                    b.Property<int>("CiudadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ciudadId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CiudadId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.Property<int>("ProvinciaId")
                        .HasColumnType("int")
                        .HasColumnName("provinciaId");

                    b.HasKey("CiudadId")
                        .HasName("PK__ciudad__9FC23FCA070C2500");

                    b.HasIndex("ProvinciaId");

                    b.ToTable("ciudad");
                });

            modelBuilder.Entity("consultorioNutricion.Models.Consultum", b =>
                {
                    b.Property<int>("ConsultaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("consultaId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConsultaId"));

                    b.Property<string>("ActividadFisica")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("actividadFisica");

                    b.Property<string>("AlimentosNoConsumidos")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("alimentosNoConsumidos");

                    b.Property<string>("DiagnosticoNutricional")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("diagnosticoNutricional");

                    b.Property<decimal?>("GrasaTotal")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("grasaTotal");

                    b.Property<decimal?>("GrasaVisceral")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("grasaVisceral");

                    b.Property<string>("HabitosNutricionales")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("habitosNutricionales");

                    b.Property<string>("Indicaciones")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("indicaciones");

                    b.Property<decimal?>("MasaMuscular")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("masaMuscular");

                    b.Property<string>("Medicacion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("medicacion");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("observaciones");

                    b.Property<decimal?>("Peso")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("peso");

                    b.Property<decimal?>("PesoPosible")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("pesoPosible");

                    b.Property<int>("TurnoId")
                        .HasColumnType("int")
                        .HasColumnName("turnoId");

                    b.HasKey("ConsultaId")
                        .HasName("PK__consulta__6EE42A6A938B2FDE");

                    b.HasIndex("TurnoId");

                    b.ToTable("consulta");
                });

            modelBuilder.Entity("consultorioNutricion.Models.ObraSocial", b =>
                {
                    b.Property<int>("ObraSocialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("obraSocialId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ObraSocialId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("NombrePlan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombrePlan");

                    b.HasKey("ObraSocialId")
                        .HasName("PK__obraSoci__D2B23EF97374D02F");

                    b.ToTable("obraSocial");
                });

            modelBuilder.Entity("consultorioNutricion.Models.Paciente", b =>
                {
                    b.Property<int>("PacienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pacienteId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PacienteId"));

                    b.Property<string>("Alergias")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("alergias");

                    b.Property<string>("Altura")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("altura");

                    b.Property<string>("Antecedentes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("antecedentes");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("apellido");

                    b.Property<string>("Calle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("calle");

                    b.Property<int?>("CiudadId")
                        .HasColumnType("int")
                        .HasColumnName("ciudadId");

                    b.Property<string>("Depto")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("depto");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("dni")
                        .IsFixedLength();

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<DateOnly?>("FechaAlta")
                        .HasColumnType("date")
                        .HasColumnName("fechaAlta");

                    b.Property<DateOnly?>("FechaNacimiento")
                        .HasColumnType("date")
                        .HasColumnName("fechaNacimiento");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("NumeroAfiliado")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("numeroAfiliado");

                    b.Property<int?>("ObraSocialId")
                        .HasColumnType("int")
                        .HasColumnName("obraSocialId");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("observaciones");

                    b.Property<string>("Piso")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("piso");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("telefono");

                    b.HasKey("PacienteId")
                        .HasName("PK__paciente__0AB98B0EE3EF8262");

                    b.HasIndex("CiudadId");

                    b.HasIndex("ObraSocialId");

                    b.ToTable("paciente");
                });

            modelBuilder.Entity("consultorioNutricion.Models.ProfesionalSalud", b =>
                {
                    b.Property<int>("ProfesionalSaludId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("profesionalSaludId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfesionalSaludId"));

                    b.Property<string>("Altura")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("altura");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("apellido");

                    b.Property<string>("Calle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("calle");

                    b.Property<int?>("CiudadId")
                        .HasColumnType("int")
                        .HasColumnName("ciudadId");

                    b.Property<string>("Depto")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("depto");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("dni")
                        .IsFixedLength();

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Especialidad")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("especialidad");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("matricula");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("Piso")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("piso");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("telefono");

                    b.HasKey("ProfesionalSaludId")
                        .HasName("PK__profesio__55AC456B734C3FE7");

                    b.HasIndex("CiudadId");

                    b.ToTable("profesionalSalud");
                });

            modelBuilder.Entity("consultorioNutricion.Models.Provincium", b =>
                {
                    b.Property<int>("ProvinciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("provinciaId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProvinciaId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.HasKey("ProvinciaId")
                        .HasName("PK__provinci__671F12A57E2EA03C");

                    b.ToTable("provincia");
                });

            modelBuilder.Entity("consultorioNutricion.Models.Turno", b =>
                {
                    b.Property<int>("TurnoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("turnoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TurnoId"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<string>("Motivo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("motivo");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int")
                        .HasColumnName("pacienteId");

                    b.Property<int>("ProfesionalSaludId")
                        .HasColumnType("int")
                        .HasColumnName("profesionalSaludId");

                    b.HasKey("TurnoId")
                        .HasName("PK__turno__44E227011C6BBA66");

                    b.HasIndex("PacienteId");

                    b.HasIndex("ProfesionalSaludId");

                    b.ToTable("turno");
                });

            modelBuilder.Entity("consultorioNutricion.Models.Ciudad", b =>
                {
                    b.HasOne("consultorioNutricion.Models.Provincium", "Provincia")
                        .WithMany("Ciudads")
                        .HasForeignKey("ProvinciaId")
                        .IsRequired()
                        .HasConstraintName("FK__ciudad__provinci__398D8EEE");

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("consultorioNutricion.Models.Consultum", b =>
                {
                    b.HasOne("consultorioNutricion.Models.Turno", "Turno")
                        .WithMany("Consulta")
                        .HasForeignKey("TurnoId")
                        .IsRequired()
                        .HasConstraintName("FK__consulta__turnoI__48CFD27E");

                    b.Navigation("Turno");
                });

            modelBuilder.Entity("consultorioNutricion.Models.Paciente", b =>
                {
                    b.HasOne("consultorioNutricion.Models.Ciudad", "Ciudad")
                        .WithMany("Pacientes")
                        .HasForeignKey("CiudadId")
                        .HasConstraintName("FK__paciente__ciudad__412EB0B6");

                    b.HasOne("consultorioNutricion.Models.ObraSocial", "ObraSocial")
                        .WithMany("Pacientes")
                        .HasForeignKey("ObraSocialId")
                        .HasConstraintName("FK__paciente__obraSo__4222D4EF");

                    b.Navigation("Ciudad");

                    b.Navigation("ObraSocial");
                });

            modelBuilder.Entity("consultorioNutricion.Models.ProfesionalSalud", b =>
                {
                    b.HasOne("consultorioNutricion.Models.Ciudad", "Ciudad")
                        .WithMany("ProfesionalSaluds")
                        .HasForeignKey("CiudadId")
                        .HasConstraintName("FK__profesion__ciuda__3E52440B");

                    b.Navigation("Ciudad");
                });

            modelBuilder.Entity("consultorioNutricion.Models.Turno", b =>
                {
                    b.HasOne("consultorioNutricion.Models.Paciente", "Paciente")
                        .WithMany("Turnos")
                        .HasForeignKey("PacienteId")
                        .IsRequired()
                        .HasConstraintName("FK__turno__pacienteI__44FF419A");

                    b.HasOne("consultorioNutricion.Models.ProfesionalSalud", "ProfesionalSalud")
                        .WithMany("Turnos")
                        .HasForeignKey("ProfesionalSaludId")
                        .IsRequired()
                        .HasConstraintName("FK__turno__profesion__45F365D3");

                    b.Navigation("Paciente");

                    b.Navigation("ProfesionalSalud");
                });

            modelBuilder.Entity("consultorioNutricion.Models.Ciudad", b =>
                {
                    b.Navigation("Pacientes");

                    b.Navigation("ProfesionalSaluds");
                });

            modelBuilder.Entity("consultorioNutricion.Models.ObraSocial", b =>
                {
                    b.Navigation("Pacientes");
                });

            modelBuilder.Entity("consultorioNutricion.Models.Paciente", b =>
                {
                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("consultorioNutricion.Models.ProfesionalSalud", b =>
                {
                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("consultorioNutricion.Models.Provincium", b =>
                {
                    b.Navigation("Ciudads");
                });

            modelBuilder.Entity("consultorioNutricion.Models.Turno", b =>
                {
                    b.Navigation("Consulta");
                });
#pragma warning restore 612, 618
        }
    }
}
